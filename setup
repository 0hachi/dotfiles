#! /usr/bin/env sh

# this script is meant to be run after a minimal
# x server installation as done by archinstall.

_log() { printf '%b\033[1m[setup]\033[0m %s%b\n' "$2" "$1" '\033[0m' >&2; }

error() {
	_log "$1" '\033[31m'
	exit 1
}
debug() { _log "$1" '\033[36m'; }
success() { _log "$1" '\033[32m'; }

installpkg() {
	# use `paru` if found.
	if command -v paru >/dev/null 2>&1; then
		package_manager="paru"
	else
		package_manager="pacman"
	fi

	for package in "$@"; do
		if [ "$package_manager" = "paru" ]; then
			paru --noconfirm --needed -S "$package" >/dev/null 2>&1
		else
			sudo pacman --noconfirm --needed -S "$package" >/dev/null 2>&1
		fi

		if [ $? -eq 0 ]; then
			success "package '$package' successfully installed with $package_manager"
		else
			error "can't install package '$package' with '$package_manager'"
		fi
	done
}

# basics

debug "updating packages database"
sudo pacman -Sy --noconfirm >/dev/null 2>&1

installpkg "git"

# aur helper
debug "installing rustup"
installpkg "rustup"

debug "installing rust nightly"
rustup default nightly >/dev/null 2>&1

debug "installing paru"
git clone https://aur.archlinux.org/paru.git ./paru >/dev/null 2>&1

debug "building paru"
(cd ./paru && makepkg -si --noconfirm) >/dev/null 2>&1
rm -rf ./paru >/dev/null 2>&1

success "paru successfully installed"

# install needed packages
## apps
debug "installing user apps"
installpkg "neovim" "alacritty" "pavucontrol" "nitrogen" "gpick" "bitwarden"

## fonts
debug "installing fonts"
installpkg "bdf-tewi-git" "wqy-bitmapfont" "noto-fonts-emoji-apple" # others are in .local/share/fonts

## cli utils
debug "installing cli utils"
installpkg "exa" "bat" "ripgrep" "devour" "nsxiv" "stow" "shotgun" "xclip"

## various non-hard dependencies
debug "installing dependencies"
installpkg "wmctrl" "pywal" "man-db" "inotify-tools"

## system
debug "installing system apps"
installpkg "xorg-server" "xorg-xinit" "xorg-xauth" "fish" "herbstluftwm" "eww" "paru" "ly"

## forks that require building
debug "installing suckless"
git clone https://github.com/0hachi/suckless.git >/dev/null 2>&1

success "dmenu installed"
(cd suckless/dmenu && sudo make install) >/dev/null 2>&1
rm -rf ./suckless >/dev/null 2>&1

# post-install

debug "enabling display manager service"
sudo systemctl enable ly.service >/dev/null 2>&1

stow .


sudo chsh -s /usr/bin/fish
fish

curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source
fisher update
